############################################################
# The user may set an environment variable with the name AMBIT_CONFIG_OVERRIDE_VAR
# The environment variable shall point to an absolute filesystem path to a directory
# The directory may contain ambit2.pref, config.prop and/or ambit2.assay.properties file
# Settings in these files will take precedence over the same settings from the application 
# WEB-INF/classes/ambit2/rest/config directory
# 
AMBIT_CONFIG_OVERRIDE_VAR=${AMBIT_CONFIG_OVERRIDE_VAR}
############################################################
############################################################
#This is AMBIT ${project.version} web services configuration.
ambit.version=${ambit.version}
toxtree.version=${toxtree.version}
ambit.build=${buildNumber}
ambit.build.timestamp=${timestamp}
############################################################
#For Authentication and authorization configuration please see config.prop file
#For fine tuning logging please see logging.prop file 
#MySQL Database configuration
#For database installation see http://ambit.sourceforge.net/install_ambitrest.html
Host=${ambit.db.host}
Scheme=jdbc\:mysql
Port=3306
Database=${ambit.db}
User=${ambit.db.user.test}
Password=${ambit.db.user.test.password}
############################################################
#Only for running JUnit tests on compile, the web application does not use it
#MySQL test db, user and pass
database.test=ambit-test
database.test.port=3306
database.user.test=${ambit.db.user.test}
database.user.test.password=${ambit.db.user.test.password}
############################################################
#How to serialize RDF/XML - by Jena (standard, prettier, slower) or StAX (faster)
rdf.writer=${rdf.writer}
############################################################
#When serializing to SDF, change line separators to \r\n 
#(for DEREK compatibility)
changeLineSeparators=${changeLineSeparators}
############################################################
#Enable JSONP support true|false
jsonp=${jsonp}
############################################################
#URI of the ontology service , e.g. http://localhost:8080/ontology
service.ontology=${service.ontology}
#Add dataset prefix for compound URI, e.g.  /dataset/1/compound/1 , instead of /compound/1
#Experimental true|false. Should be used if AA is on, see config.prop file
dataset.members.prefix=${dataset.members.prefix}
#Path to OpenBabel executable http://openbabel.org
OBABEL_HOME=${OBABEL_HOME}
#Path to Dragon6 executable http://www.talete.mi.it/products/dragon_description.htm 
DRAGON_HOME=${DRAGON_HOME}
#Path to Vega jar executable https://www.vegahub.eu/  
VEGA_HOME=${VEGA_HOME}
VEGA_REMOTE=${VEGA_REMOTE}
VEGA_REMOTE_USER=${VEGA_REMOTE_USER}
VEGA_REMOTE_PASS=${VEGA_REMOTE_PASS}
VEGA=${VEGA}
JAVA_BIN=${JAVA_BIN}
#Path to balloon executable http://users.abo.fi/mivainio/balloon/ 
BALLOON_HOME=${BALLOON_HOME}
#Add a column with the license in CSV and TXT files
license.intextfiles=${license.intextfiles}
#Protect /admin resources via OpenTox AA.  true | false 
#If true, you have to define an OpenSSO policy for http://host:port/ambit2/admin to be able to use it! 
aa.admin=${aa.admin}
#aa.compound true| false defines if the /compound/{id} URIs are protected by OpenSSO
aa.compound=${aa.compound}
aa.feature=${aa.feature}
#aa.model is ignored
#aa.model=${aa.model}
#Error report level : production or debug . If debug, the status will show the stack trace 
ambit.report.level=${ambit.report.level}
############################################################
showAromaticity=true
FASTSMARTS=true
generate2D=true
smi2sdf.smiles.generate=true
smilesParser=false
defaultDir=
atomtypes.stop=false
############################################################
MAXRECORDS=${ambit.query.maxrecords}
############################################################
#ambit profile
#Specifies which version of the menu will be used: default | enanomapper | excape | lri | ot | qmrf | toxmatch
ambit.profile=${ambit.profile}
############################################################
#attach resources
attach.depict=${attach.depict}
attach.toxmatch=${attach.toxmatch}
attach.substance=${attach.substance}
#new 3.1.0
attach.investigation=${attach.investigation}
attach.substanceowner=${attach.substanceowner}
############################################################
#OpenPhacts client config
ops.server_root=${ops.server_root}
app_id=${ops.app_id}
app_key=${ops.app_key}
############################################################
# IUCLID5 client config
#username for iuclid5 SessionEngine service 
i5.user=${i5.user}
#password for iuclid5 SessionEngine service 
i5.pass=${i5.pass}
#target url for iuclid5 services 
i5.server=${i5.server}
################################
# IUCLID6 client config
#username for iuclid6 
i6.user=${i6.user}
#password for iuclid6 
i6.pass=${i6.pass}
#target url for iuclid6 services 
i6.server=${i6.server}
############################################################
#google.analytics code (UA-XXXX-Y) if not set GA will be disabled
google.analytics=${google.analytics}
############################################################
#AJAX query timeout, msec
#specifies the timeout for the queries, executed by the browser. 
#If you experience timeout errors, consider increasing the default value of 10 sec
ajax.timeout=${ajax.timeout}
#Order by similarity
similarity.order=${similarity.order}
############################################################
# set to 0 if deployed to servlet container root , otherwise to 1
baseurl.depth=${baseurl.depth}
############################################################
# customisations
custom.title=${custom.title}
custom.description=${custom.description}
custom.logo=${custom.logo}
custom.color=${custom.color}
#URI of the search service to appear on the front page, e.g. https://localhost:8080/ui/_search  
custom.search=${custom.search}
#default query on the front page
custom.query=${custom.query}
#default query on the structure search page
custom.structurequery=${custom.structurequery}
#license
custom.license=${custom.license}
#############################################################
#1
solr.service.1=${solr.service.1}
solr.url.1=${solr.url.1}
solr.toplevel.1=${solr.toplevel.1}
solr.basic.user.1=${solr.basic.user.1}
solr.basic.password.1=${solr.basic.password.1}
#2
solr.service.2=${solr.service.2}
solr.url.2=${solr.url.2}
solr.toplevel.2=${solr.toplevel.2}
solr.basic.user.2=${solr.basic.user.2}
solr.basic.password.2=${solr.basic.password.2}
#3
solr.service.3=${solr.service.3}
solr.url.3=${solr.url.3}
solr.toplevel.3=${solr.toplevel.3}
solr.basic.user.3=${solr.basic.user.3}
solr.basic.password.3=${solr.basic.password.3}
#4
solr.service.4=${solr.service.4}
solr.url.4=${solr.url.4}
solr.toplevel.4=${solr.toplevel.4}
solr.basic.user.4=${solr.basic.user.4}
solr.basic.password.4=${solr.basic.password.4}
#5
solr.service.5=${solr.service.5}
solr.url.5=${solr.url.5}
solr.toplevel.5=${solr.toplevel.5}
solr.basic.user.5=${solr.basic.user.5}
solr.basic.password.5=${solr.basic.password.5}
#6
solr.service.6=${solr.service.6}
solr.url.6=${solr.url.6}
solr.toplevel.6=${solr.toplevel.6}
solr.basic.user.6=${solr.basic.user.6}
solr.basic.password.6=${solr.basic.password.6}
#7
solr.service.7=${solr.service.7}
solr.url.7=${solr.url.7}
solr.toplevel.7=${solr.toplevel.7}
solr.basic.user.7=${solr.basic.user.7}
solr.basic.password.7=${solr.basic.password.7}
#8
solr.service.8=${solr.service.8}
solr.url.8=${solr.url.8}
solr.toplevel.8=${solr.toplevel.8}
solr.basic.user.8=${solr.basic.user.8}
solr.basic.password.8=${solr.basic.password.8}
#9
solr.service.9=${solr.service.9}
solr.url.9=${solr.url.9}
solr.toplevel.9=${solr.toplevel.9}
solr.basic.user.9=${solr.basic.user.9}
solr.basic.password.9=${solr.basic.password.9}
#
solr.filter=${solr.filter}
##############################################################
map.folder=${map.folder}
